#!/bin/bash

# Script to update Supabase keys for local development
# This script extracts the current keys from the running Supabase instance
# and creates/updates the .env.local file with the correct values

echo "🔍 Getting current Supabase keys..."

# Get the current keys from Supabase status
SUPABASE_STATUS=$(npx supabase status 2>/dev/null)

if [ $? -ne 0 ]; then
    echo "❌ Error: Supabase is not running. Please start it with 'npx supabase start'"
    exit 1
fi

# Extract the keys from the status output
API_URL=$(echo "$SUPABASE_STATUS" | grep "API URL:" | awk '{print $3}')
PUBLISHABLE_KEY=$(echo "$SUPABASE_STATUS" | grep "Publishable key:" | awk '{print $3}')

if [ -z "$API_URL" ] || [ -z "$PUBLISHABLE_KEY" ]; then
    echo "❌ Error: Could not extract Supabase keys from status output"
    echo "Status output:"
    echo "$SUPABASE_STATUS"
    exit 1
fi

echo "📋 Current Supabase configuration:"
echo "   API URL: $API_URL"
echo "   Publishable Key: $PUBLISHABLE_KEY"
echo "   ⚠️  Service Role Key: NOT INCLUDED (should never be used in client-side apps)"

# Create or update .env.local file
ENV_FILE=".env.local"

echo "🔄 Creating/updating .env.local file..."

# Create backup if file exists
if [ -f "$ENV_FILE" ]; then
    cp "$ENV_FILE" "$ENV_FILE.backup"
    echo "📁 Backup created at: $ENV_FILE.backup"
fi

# Create the .env.local file
cat > "$ENV_FILE" << EOF
# Supabase Configuration
# Generated by update-supabase-keys script
# Last updated: $(date)
# 
# Note: Service role key is intentionally excluded for security.
# It should never be used in client-side applications.

VITE_SUPABASE_URL=$API_URL
VITE_SUPABASE_ANON_KEY=$PUBLISHABLE_KEY
EOF

echo "✅ Environment file updated successfully!"
echo "📄 Created/updated: $ENV_FILE"
echo ""
echo "🚀 You can now run your development server with the updated environment variables."
echo "   The application will use these environment variables instead of hardcoded values."
echo ""
echo "💡 To revert changes, restore from the backup file if it was created."
